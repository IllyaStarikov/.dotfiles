name: end-to-end tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run nightly at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      debug_mode:
        description: 'Run in debug mode'
        required: false
        default: false
        type: boolean

env:
  TERM: xterm-256color
  CI: true

jobs:
  docker-integration:
    name: docker integration test
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Install zsh (required for test runner)
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y zsh

      - name: Make scripts executable
        run: |
          chmod +x test/e2e/runner.zsh
          chmod +x test/e2e/docker-e2e-test.zsh
          chmod +x test/runner.zsh

      - name: Run E2E tests
        run: |
          echo "Running E2E tests in debug mode for better diagnostics..."
          ./test/e2e/runner.zsh --debug

      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-logs
          path: |
            test/logs/e2e_*/
            test/e2e/*.log

      - name: Display test summary
        if: always()
        run: |
          # Find the latest log directory
          LOG_DIR=$(ls -td test/logs/e2e_* 2>/dev/null | head -1)

          if [ -d "$LOG_DIR" ]; then
            echo "## Test Summary"
            echo ""

            # Check if test.log exists and show summary
            if [ -f "$LOG_DIR/test.log" ]; then
              echo "### Test Phases:"
              grep -E "^(✓|✗|⚠)" "$LOG_DIR/test.log" | tail -20 || true

              echo ""
              echo "### Final Result:"
              tail -5 "$LOG_DIR/test.log" | grep -E "(Successfully|Failed)" || echo "Test status unclear"
            fi

            # Show report if exists
            if [ -f "$LOG_DIR/report.txt" ]; then
              echo ""
              echo "### Report:"
              cat "$LOG_DIR/report.txt"
            fi
          else
            echo "No test logs found"
          fi

  script-validation:
    name: validate scripts
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Validate scripts are executable
        run: |
          echo "Checking script permissions..."
          for script in $(find . -name "*.sh" -o -name "*.zsh"); do
            if [ -f "$script" ]; then
              if [ ! -x "$script" ]; then
                echo "Warning: $script is not executable"
              fi
            fi
          done

      - name: Check for syntax errors
        run: |
          echo "Checking shell script syntax..."
          for script in $(find . -name "*.sh"); do
            if [ -f "$script" ]; then
              bash -n "$script" || echo "Syntax error in $script"
            fi
          done

          for script in $(find . -name "*.zsh"); do
            if [ -f "$script" ]; then
              zsh -n "$script" || echo "Syntax error in $script"
            fi
          done

      - name: Verify Docker files
        run: |
          echo "Checking E2E test files exist..."
          [ -f "test/e2e/runner.zsh" ] || exit 1
          [ -f "test/e2e/docker-e2e-test.zsh" ] || exit 1
          echo "All required files present"

  test-summary:
    name: test result summary
    runs-on: ubuntu-latest
    needs: [docker-integration]
    if: always()

    steps:
      - name: Check results
        run: |
          echo "## E2E Test Results"
          echo ""

          if [ "${{ needs.docker-integration.result }}" = "success" ]; then
            echo "**End-to-end tests passed successfully**"
            echo ""
            echo "The complete dotfiles setup has been validated in a clean Docker environment."
          else
            echo "**End-to-end tests failed**"
            echo ""
            echo "Please check the test logs for details."
            exit 1
          fi

      - name: Create summary comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const result = '${{ needs.docker-integration.result }}';
            const status = result === 'success' ? 'passed' : 'failed';

            const body = `## End-to-End Test Results

            The E2E tests have ${status}.

            ${result === 'success'
              ? '- Setup script works correctly\n- All symlinks created\n- Tests pass in clean environment'
              : 'Please check the workflow logs for details.'}
            `;

            // Comment on PR
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });