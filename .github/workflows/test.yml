name: Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

env:
  DOTFILES_DIR: ${{ github.workspace }}
  CI_MODE: 1

jobs:
  test:
    name: Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, macos-14]  # Linux, macOS latest, and Sonoma
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      
      - name: Setup Environment
        run: |
          echo "TEST_TMP_DIR=/tmp/dotfiles-test" >> $GITHUB_ENV
          mkdir -p "/tmp/dotfiles-test"
          
          # Install dependencies based on OS
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            brew install bash coreutils findutils gnu-sed neovim shellcheck
            # Add GNU tools to PATH
            echo "/usr/local/opt/coreutils/libexec/gnubin" >> $GITHUB_PATH
            echo "/usr/local/opt/findutils/libexec/gnubin" >> $GITHUB_PATH
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt-get update -qq
            sudo apt-get install -y bash coreutils findutils sed neovim shellcheck zsh tmux git
          fi
      
      - name: Setup Neovim
        run: |
          mkdir -p ~/.config/nvim ~/.local/share/nvim ~/.local/state/nvim
          ln -sf "${{ github.workspace }}/src/neovim/init.lua" ~/.config/nvim/init.lua
          ln -sf "${{ github.workspace }}/src/neovim/config" ~/.config/nvim/config
          
          # Install lazy.nvim
          git clone --filter=blob:none --single-branch \
            https://github.com/folke/lazy.nvim.git \
            ~/.local/share/nvim/lazy/lazy.nvim || true
      
      - name: Run Tests
        run: |
          chmod +x test/test
          cd test
          ./test --unit --ci -v
          ./test --functional --ci -v
      
      - name: Validate Configurations
        run: |
          # Shell configs
          zsh -n src/zsh/zshrc || echo "Warning: Zsh config invalid"
          bash -n src/setup/setup.sh || echo "Warning: Setup script invalid"
          
          # Git config
          git config --file=src/git/gitconfig --list > /dev/null
          
          # Check for issues
          ! grep -r "/Users/[^/]*/\|/home/[^/]*/" src/ || echo "Warning: Hardcoded paths"
          ! grep -r -i "password\|secret\|key\|token" src/ | grep -v "^#" | grep "=" || echo "Warning: Potential secrets"
      
      - name: Lint Scripts
        run: |
          find src -name "*.sh" -type f -print0 | xargs -0 shellcheck -x || true
          find test -name "*.sh" -type f -print0 | xargs -0 shellcheck -x || true
      
      - name: Upload Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}
          path: |
            test/test-results.xml
            test/*.log
          retention-days: 7