name: Dependency Updates

on:
  schedule:
    - cron: '0 0 * * 1' # Weekly on Monday
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update:
    name: Update Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Update Git Submodules
        run: |
          echo "::group::Update submodules"
          git submodule update --init --recursive
          git submodule update --remote --merge

          # Check if there are changes
          if [[ -n $(git status --porcelain) ]]; then
            echo "Submodule updates available"
            echo "SUBMODULES_UPDATED=true" >> $GITHUB_ENV
          else
            echo "No submodule updates"
            echo "SUBMODULES_UPDATED=false" >> $GITHUB_ENV
          fi
          echo "::endgroup::"

      - name: Update GitHub Actions
        uses: actions/dependency-review-action@v3
        continue-on-error: true
        with:
          warn-only: true

      - name: Check for Neovim Plugin Updates
        run: |
          echo "::group::Check plugin updates"
          # Extract plugin URLs from Neovim config
          if [[ -f "src/neovim/config/plugins.lua" ]]; then
            echo "Checking for plugin updates..."
            grep -oE '"[^"]+/[^"]+"' src/neovim/config/plugins.lua | \
              sed 's/"//g' | \
              grep -E '^[a-zA-Z0-9_-]+/[a-zA-Z0-9_.-]+$' | \
              sort -u > /tmp/plugins.txt

            echo "Found $(wc -l < /tmp/plugins.txt) plugins"

            # Check each plugin's latest release (limit to first 10 for speed)
            head -10 /tmp/plugins.txt | while read -r plugin; do
              echo -n "Checking $plugin... "
              latest=$(curl -s "https://api.github.com/repos/$plugin/releases/latest" | \
                grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/' || echo "unknown")
              echo "$latest"
            done
          fi
          echo "::endgroup::"

      - name: Update Documentation
        run: |
          echo "::group::Update docs"
          # Update year in copyright notices
          current_year=$(date +%Y)
          find . -type f \( -name "*.md" -o -name "LICENSE" \) -exec \
            sed -i "s/Copyright.*[0-9]\{4\}/Copyright $current_year/g" {} \;

          # Update last updated date in README
          if grep -q "Last Updated:" README.md; then
            sed -i "s/Last Updated:.*/Last Updated: $(date '+%B %d, %Y')/g" README.md
          fi
          echo "::endgroup::"

      - name: Create Pull Request
        if: env.SUBMODULES_UPDATED == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies and submodules'
          title: 'ðŸ”„ Weekly Dependency Updates'
          body: |
            ## ðŸ”„ Automated Dependency Updates

            This PR contains the following updates:
            - Git submodules updated to latest versions
            - Documentation dates updated
            - Copyright years updated

            ### Pre-merge Checklist
            - [ ] Review submodule changes
            - [ ] Test major functionality
            - [ ] Verify no breaking changes

            ---
            *This PR was automatically created by the dependency update workflow.*
          branch: deps/weekly-update
          delete-branch: true
          labels: |
            dependencies
            automated
