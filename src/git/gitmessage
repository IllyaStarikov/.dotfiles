# <type>(<scope>): <subject>

# <body>

# <footer>

# Conventional Commits Format (https://www.conventionalcommits.org/)
# ===================================================================
# Type (required):
#   feat     - New feature
#   fix      - Bug fix
#   docs     - Documentation only changes
#   style    - Code style changes (formatting, semicolons, etc.)
#   refactor - Code change that neither fixes a bug nor adds a feature
#   perf     - Performance improvements
#   test     - Adding or correcting tests
#   build    - Changes to build process or dependencies
#   ci       - CI/CD configuration changes
#   chore    - Other changes that don't modify src or test files
#   revert   - Reverts a previous commit
#
# Scope (optional): component, file, or module name
# Subject: imperative mood, 50 chars max, no period at end
# Body: explain what and why (not how), wrap at 72 chars
# Footer: breaking changes (BREAKING CHANGE:), issue refs (Closes #123)
#
# Example:
# feat(auth): add OAuth2 login support
#
# Implemented GitHub and Google OAuth2 providers
# with proper error handling and token refresh.
#
# Closes #123