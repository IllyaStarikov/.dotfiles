# Performance: Only eval brew if not already in PATH
if [[ ! "$PATH" == */opt/homebrew/bin* ]]; then
  eval $(/opt/homebrew/bin/brew shellenv)
fi

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# ZSH_THEME="spaceship"
ZSH_THEME="spaceship"
SPACESHIP_VI_MODE_INSERT="[λ]"
SPACESHIP_VI_MODE_NORMAL="[µ]"
SPACESHIP_BATTERY_SHOW=false

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
#
# Optimized plugin loading order for performance
plugins=(
  vi-mode
  git
  brew
  history-substring-search
  python
  macos
  colored-man-pages
  command-not-found
)

# Faster Vim Mode
export KEYTIMEOUT=1

# Enable command correction
ENABLE_CORRECTION="true"

# Display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Disable marking untracked files under VCS as dirty.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Change the command execution time
HIST_STAMPS="mm/dd/yyyy"

export ZSH=/Users/starikov/.oh-my-zsh
export ZSH_CUSTOM=/Users/starikov/.oh-my-zsh/custom/
source $ZSH/oh-my-zsh.sh

# Load zsh-syntax-highlighting from Homebrew (must be after oh-my-zsh)
if [ -f /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
  source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

# Load current theme and update if needed
if [ -f ~/.config/theme-switcher/current-theme.sh ]; then
  source ~/.config/theme-switcher/current-theme.sh
fi

# Aliases
alias vim="nvim"
alias vi="nvim"
alias ranger="source ranger"
alias tx="tmuxinator"
alias txs="tmuxinator start"

# Modern ls replacement with better defaults
alias ls="eza --group-directories-first"
alias ll="eza -l --group-directories-first --time-style=relative"
alias la="eza -la --group-directories-first --time-style=relative"
alias tree="eza --tree"

alias haskell="ghci"
alias haskellcc="ghc"

alias diff="colordiff"
alias grep="grep --color=always"
alias reset="source ~/.zshrc && reset"

alias pandoc="pandoc --wrap=none --listings"
alias gl="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias theme="~/.dotfiles/src/theme-switcher/switch-theme.sh"
alias install-auto-theme="~/.dotfiles/src/theme-switcher/install-auto-theme.sh"

## get rid of command not found
alias cd..="cd .."

## a quick way to get out of current directory
alias ..="cd .."
alias ...="cd ../../"
alias ....="cd ../../../"
alias .....="cd ../../../../"
alias .4="cd ../../../../"
alias .5="cd ../../../../.."

## get current public IP
alias ip="curl icanhazip.com"

## list TODO/FIX lines from the current project
# Modern ripgrep-based search (faster than ack)
alias todos="rg -n --no-heading '(TODO|FIX(ME)?|NOTE|HACK)'"
alias find-file="fd"
alias find-content="rg"

## disk stuff...
alias df='df -H'
alias du='du -ch'

# Man autocomplete
zstyle ':completion:*:manuals'    separate-sections true
zstyle ':completion:*:manuals.*'  insert-sections   true
zstyle ':completion:*:man:*'      menu yes select

# Search Through History with arrow
bindkey "^[[A" history-substring-search-up
bindkey "^[[B" history-substring-search-down

# map delete line (iTerm thing)
bindkey "^X\x7f" backward-kill-line

# Add colors to Terminal
export CLICOLOR=1
export LSCOLORS=GxFxCxDxBxegedabagaced

export EDITOR=nvim
export VISUAL=nvim

export TERM=xterm-256color

[ -d ~/.localrc ]   && source ~/.localrc
[ -d ~/.shortcuts ] && source ~/.shortcuts
[ -d ~/.scripts ]   && export PATH=$PATH:~/.scripts/

[ -f ~/.fzf.zsh ]   && source ~/.fzf.zsh

# Add pyenv to path
export PATH=$PATH:~/.scripts/

alias brew='arch -arm64 /opt/homebrew/bin/brew'
alias pyenv='arch -arm64 pyenv'

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init --path)"
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
fi

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/starikov/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/starikov/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/starikov/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/starikov/google-cloud-sdk/completion.zsh.inc'; fi
