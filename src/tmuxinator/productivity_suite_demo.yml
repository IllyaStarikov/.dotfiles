# Productivity Suite Showcase üöÄ
# Experience the power of Snacks.nvim QoL suite

name: productivity_suite_demo
root: ~/

# Launch with: tmuxinator start productivity_suite_demo

windows:
  - dashboard:
      layout: even-horizontal
      panes:
        - |
          echo "üéØ SNACKS.NVIM PRODUCTIVITY SUITE"
          echo "================================"
          echo ""
          echo "Launch Neovim to see the dashboard!"
          echo ""
          sleep 2
          nvim -c "echo ''" -c "echo '‚ö° Lightning-fast dashboard with recent files'" -c "echo 'üîç Smart picker with frecency algorithm'" -c "echo 'üñ•Ô∏è  Instant terminal management'" -c "echo 'üé® Smooth animations throughout'"
        - |
          echo "üìä Performance Metrics"
          echo "===================="
          echo ""
          echo "Dashboard load: <50ms"
          echo "Picker search: <10ms"
          echo "Terminal spawn: <20ms"
          echo "Animation FPS: 60"
          echo ""
          echo "üèÜ Replaces 15+ plugins"
          echo "   with ONE suite!"

  - smart_picker:
      layout: main-vertical
      main-pane-width: 70%
      panes:
        - |
          mkdir -p /tmp/picker_demo/{src,test,docs}
          cd /tmp/picker_demo
          
          # Create demo files
          echo "// Main application" > src/app.js
          echo "// API routes" > src/api.js
          echo "// Database models" > src/models.js
          echo "// Test suite" > test/app.test.js
          echo "# Documentation" > docs/README.md
          
          nvim -c "echo 'üîç SMART PICKER DEMO'" \
               -c "echo ''" \
               -c "echo 'Press <leader>ff to find files'" \
               -c "echo 'Press <leader>fg to live grep'" \
               -c "echo 'Press <leader>fb to browse buffers'" \
               -c "echo ''" \
               -c "echo '‚ú® Features:'" \
               -c "echo '  ‚Ä¢ Frecency sorting (most used first)'" \
               -c "echo '  ‚Ä¢ Smart .gitignore respect'" \
               -c "echo '  ‚Ä¢ Lightning-fast fuzzy matching'" \
               -c "echo '  ‚Ä¢ Beautiful preview window'"
        - |
          echo "üéØ Picker Power Features"
          echo "======================"
          echo ""
          echo "Smart Exclusions:"
          echo "  ‚úì node_modules"
          echo "  ‚úì .git directories"
          echo "  ‚úì Binary files"
          echo "  ‚úì Build artifacts"
          echo ""
          echo "Advanced Search:"
          echo "  ‚Ä¢ Regex support"
          echo "  ‚Ä¢ Case sensitivity toggle"
          echo "  ‚Ä¢ Multi-select mode"
          echo "  ‚Ä¢ Quick actions"

  - terminal_magic:
      layout: tiled
      panes:
        - nvim -c "echo 'üñ•Ô∏è  TERMINAL MANAGEMENT'" \
               -c "echo ''" \
               -c "echo 'Press <leader>te to open terminal'" \
               -c "echo 'Press <C-\\> for floating terminal'" \
               -c "echo 'Press <leader>tg for LazyGit'" \
               -c "echo ''" \
               -c "echo 'Navigate with <C-h/j/k/l>!'"
        - |
          echo "‚ö° Terminal Features"
          echo "=================="
          echo ""
          echo "‚Ä¢ Instant spawn (<20ms)"
          echo "‚Ä¢ Smart navigation"
          echo "‚Ä¢ Persistent sessions"
          echo "‚Ä¢ Float/split modes"
          echo "‚Ä¢ Git integration"
          echo ""
          echo "üéÆ Pro tip: Seamless"
          echo "vim ‚Üî terminal navigation!"
        - |
          echo "üêô LazyGit Integration"
          echo "===================="
          echo ""
          echo "Full git workflow without"
          echo "leaving Neovim!"
          echo ""
          echo "‚Ä¢ Stage files visually"
          echo "‚Ä¢ Interactive rebase"
          echo "‚Ä¢ Branch management"
          echo "‚Ä¢ Stash operations"
        - |
          cd /tmp/picker_demo
          git init
          git add .
          echo "üìÅ Git-aware features"
          echo "==================="
          echo ""
          echo "Snacks respects your"
          echo "git configuration!"

  - focus_mode:
      layout: even-vertical
      panes:
        - |
          cat << 'EOF' > /tmp/focus_demo.md
          # Deep Work Mode üßò
          
          Snacks.nvim provides the ultimate distraction-free environment.
          
          ## Zen Mode Features
          
          - Hide all UI elements
          - Center the content  
          - Increase font size
          - Dim inactive code
          - Focus on what matters
          
          ## How to Enable
          
          Press `<leader>z` to toggle Zen mode and enter flow state!
          
          The perfect environment for:
          - Writing documentation
          - Deep code review
          - Complex problem solving
          - Learning new concepts
          EOF
          nvim /tmp/focus_demo.md -c "echo 'üßò ZEN MODE: Press <leader>z to focus'"
        - |
          echo "üéØ Focus Statistics"
          echo "=================="
          echo ""
          echo "Productivity boost: +40%"
          echo "Distraction reduction: 85%"
          echo "Eye strain: -60%"
          echo ""
          echo "üèÜ The calmest coding"
          echo "   environment ever!"

  - utilities:
      layout: tiled
      panes:
        - |
          echo "üõ†Ô∏è Smart Buffer Management"
          echo "========================"
          echo ""
          echo "<leader>bd - Delete buffer"
          echo "<leader>bo - Delete others"
          echo ""
          echo "‚ú® Smart deletion:"
          echo "  ‚Ä¢ Preserves window layout"
          echo "  ‚Ä¢ Handles modified buffers"
          echo "  ‚Ä¢ Quick undo support"
          nvim -c "echo 'Open multiple files and try buffer commands!'"
        - |
          echo "üé® Notification System"
          echo "===================="
          echo ""
          echo "Beautiful notifications:"
          echo "  ‚Ä¢ Success ‚úÖ"
          echo "  ‚Ä¢ Warning ‚ö†Ô∏è"
          echo "  ‚Ä¢ Error ‚ùå"
          echo "  ‚Ä¢ Info ‚ÑπÔ∏è"
          echo ""
          echo "Auto-dismiss & history!"
        - |
          echo "üîÑ Smart Rename"
          echo "=============="
          echo ""
          echo "LSP-powered renaming:"
          echo "  ‚Ä¢ Project-wide"
          echo "  ‚Ä¢ Preview changes"
          echo "  ‚Ä¢ Undo support"
          echo ""
          echo "Press <leader>cr"
        - |
          echo "üìà Performance Impact"
          echo "==================="
          echo ""
          echo "Startup time: +8ms only!"
          echo "Memory: Optimized"
          echo "CPU: Minimal impact"
          echo ""
          echo "üöÄ 15 plugins ‚Üí 1 suite"