#!/usr/bin/env bash

# Universal system update script for macOS and Linux
# Updates all package managers, plugins, and dependencies

set -euo pipefail

# Detect OS
detect_os() {
    case "$OSTYPE" in
        darwin*) echo "macos" ;;
        linux*) echo "linux" ;;
        *) echo "unknown" ;;
    esac
}

# Detect Linux package manager
detect_package_manager() {
    if command -v apt-get &> /dev/null; then
        echo "apt"
    elif command -v dnf &> /dev/null; then
        echo "dnf"
    elif command -v yum &> /dev/null; then
        echo "yum"
    elif command -v pacman &> /dev/null; then
        echo "pacman"
    elif command -v zypper &> /dev/null; then
        echo "zypper"
    else
        echo "unknown"
    fi
}

echo "ðŸ”„ Starting universal system update..."

OS=$(detect_os)
echo "Detected OS: $OS"

# OS-specific system updates
case "$OS" in
    macos)
        # macOS system updates
        echo "Checking for macOS system updates..."
        if softwareupdate -l 2>&1 | grep -q "No new software available"; then
            echo "No macOS system updates available."
        else
            echo "macOS updates available. Use 'sudo softwareupdate -ia' to install manually."
        fi
        
        # Mac App Store updates
        if command -v mas &> /dev/null; then
            echo "Updating Mac App Store applications..."
            mas upgrade || echo "No Mac App Store updates or failed to install."
        fi
        
        # Homebrew updates
        if command -v brew &> /dev/null; then
            echo "Updating Homebrew packages..."
            brew update
            brew upgrade && brew upgrade --cask && brew cleanup || echo "Homebrew update failed."
        fi
        ;;
        
    linux)
        PKG_MGR=$(detect_package_manager)
        echo "Detected package manager: $PKG_MGR"
        
        case "$PKG_MGR" in
            apt)
                echo "Updating APT packages..."
                sudo apt-get update && sudo apt-get upgrade -y || echo "APT update failed."
                sudo apt-get autoremove -y
                ;;
            dnf)
                echo "Updating DNF packages..."
                sudo dnf upgrade -y || echo "DNF update failed."
                sudo dnf autoremove -y
                ;;
            yum)
                echo "Updating YUM packages..."
                sudo yum upgrade -y || echo "YUM update failed."
                ;;
            pacman)
                echo "Updating Pacman packages..."
                sudo pacman -Syu --noconfirm || echo "Pacman update failed."
                # Clean package cache
                sudo pacman -Sc --noconfirm
                ;;
            zypper)
                echo "Updating Zypper packages..."
                sudo zypper update -y || echo "Zypper update failed."
                ;;
            *)
                echo "Unknown package manager, skipping system updates."
                ;;
        esac
        
        # Flatpak updates (if installed)
        if command -v flatpak &> /dev/null; then
            echo "Updating Flatpak applications..."
            flatpak update -y || echo "Flatpak update failed."
        fi
        
        # Snap updates (if installed)
        if command -v snap &> /dev/null; then
            echo "Updating Snap packages..."
            sudo snap refresh || echo "Snap update failed."
        fi
        ;;
esac

# Common updates for both platforms

# Neovim plugin updates
if command -v nvim &> /dev/null; then
    echo "Updating Neovim plugins..."
    nvim --headless -c "Lazy! sync" -c "qa" || echo "Neovim plugin update failed."
fi

# Zinit updates
if [[ -d "${ZINIT_HOME:-$HOME/.local/share/zinit/zinit.git}" ]]; then
    echo "Updating Zinit plugins..."
    zsh -ic "zinit update --all" 2>/dev/null || echo "Zinit update failed."
fi

# tmux plugin updates
if [[ -d "$HOME/.tmux/plugins/tpm" ]]; then
    echo "Updating tmux plugins..."
    $HOME/.tmux/plugins/tpm/bin/update_plugins all || echo "tmux plugin update failed."
fi

# Programming language package updates

# Node.js/npm
if command -v npm &> /dev/null; then
    echo "Updating global npm packages..."
    npm update -g || echo "npm global package update failed."
fi

# Python/pip
if command -v pip3 &> /dev/null; then
    echo "Updating Python packages..."
    pip3 install --upgrade pip setuptools wheel || echo "Failed to upgrade pip components."
    
    # Update user-installed packages
    if command -v jq &> /dev/null; then
        pip3 list --user --outdated --format=json | jq -r '.[].name' | while read -r pkg; do
            pip3 install --user --upgrade "$pkg" || echo "Failed to update: $pkg"
        done
    else
        echo "Install jq for automatic pip package updates"
    fi
fi

# Ruby/gem
if command -v gem &> /dev/null; then
    echo "Updating RubyGems..."
    gem update --user-install || echo "RubyGems update failed."
fi

# Rust/cargo
if command -v rustup &> /dev/null; then
    echo "Updating Rust toolchain..."
    rustup update || echo "Rust toolchain update failed."
fi

if command -v cargo &> /dev/null; then
    echo "Updating global Cargo packages..."
    if command -v cargo-update &> /dev/null; then
        cargo install-update -a || echo "Cargo package update failed."
    else
        echo "Install cargo-update for automatic updates: cargo install cargo-update"
    fi
fi

# Go packages
if command -v go &> /dev/null; then
    echo "Updating Go packages..."
    go get -u all || echo "Go package update failed."
fi

# Update package manager databases (OS-specific)
case "$OS" in
    linux)
        # Update locate database
        if command -v updatedb &> /dev/null; then
            echo "Updating locate database..."
            sudo updatedb || echo "updatedb failed."
        fi
        
        # Update font cache
        if command -v fc-cache &> /dev/null; then
            echo "Updating font cache..."
            fc-cache -fv || echo "Font cache update failed."
        fi
        ;;
esac

echo "âœ… System update process completed!"
echo ""
echo "Summary of what was updated:"
echo "- System packages"
echo "- Application packages"
echo "- Neovim plugins"
echo "- Shell plugins (Zinit)"
echo "- Programming language packages"
echo ""
echo "You may need to restart some applications for updates to take effect."