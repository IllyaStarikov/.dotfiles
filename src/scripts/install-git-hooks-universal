#!/usr/bin/env bash
# Universal Git hooks installer - Works on macOS and Linux

set -euo pipefail

# Color output
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly RED='\033[0;31m'
readonly NC='\033[0m'

info() { echo -e "${GREEN}[INFO]${NC} $1"; }
warning() { echo -e "${YELLOW}[WARN]${NC} $1"; }
error() { echo -e "${RED}[ERROR]${NC} $1"; }

# Find git root directory
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    error "Not in a git repository"
    exit 1
fi

GIT_ROOT=$(git rev-parse --show-toplevel)
HOOKS_DIR="$GIT_ROOT/.git/hooks"

info "Installing git hooks in $HOOKS_DIR"

# Pre-commit hook
cat > "$HOOKS_DIR/pre-commit" << 'EOF'
#!/usr/bin/env bash
# Universal pre-commit hook

# Run tests if they exist
if [[ -f "Makefile" ]] && grep -q "^test:" Makefile; then
    echo "Running tests..."
    make test || exit 1
fi

# Run linters if available
if command -v ruff >/dev/null 2>&1; then
    echo "Running ruff..."
    ruff check . || exit 1
fi

if command -v eslint >/dev/null 2>&1 && [[ -f ".eslintrc.js" || -f ".eslintrc.json" ]]; then
    echo "Running eslint..."
    eslint . || exit 1
fi

# Check for large files
find . -type f -size +5M | grep -v "^./.git" | while read -r file; do
    echo "Warning: Large file detected: $file"
    echo "Consider using Git LFS for files larger than 5MB"
done
EOF

chmod +x "$HOOKS_DIR/pre-commit"
info "Installed pre-commit hook"

# Commit-msg hook
cat > "$HOOKS_DIR/commit-msg" << 'EOF'
#!/usr/bin/env bash
# Universal commit message hook

# Check commit message format
commit_regex='^(feat|fix|docs|style|refactor|test|chore)(\(.+\))?: .{1,50}'
if ! grep -qE "$commit_regex" "$1"; then
    echo "Invalid commit message format!"
    echo "Format: <type>(<scope>): <subject>"
    echo "Example: feat(auth): add login functionality"
    echo ""
    echo "Types: feat, fix, docs, style, refactor, test, chore"
    exit 1
fi
EOF

chmod +x "$HOOKS_DIR/commit-msg"
info "Installed commit-msg hook"

info "Git hooks installed successfully!"