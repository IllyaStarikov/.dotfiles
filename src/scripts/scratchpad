#!/usr/bin/env zsh
# Universal scratchpad - Create temporary files for quick editing
# Works on both macOS and Linux

# Source common library
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
source "${SCRIPT_DIR}/common.sh"

# Cleanup function to handle interrupts gracefully
cleanup() {
  # Nothing critical to clean up, but trap ensures clean exit
  exit 0
}

# Set up trap for clean exit on interrupt (Ctrl-C)
trap cleanup INT TERM

# Get file extension if provided
EXT="${1:+.$1}"

# Generate unique filename for temporary scratch file
# Uses uuidgen if available (standard on macOS and most Linux distros)
# Falls back to timestamp + process ID + random number for uniqueness
generate_filename() {
  if has_command uuidgen; then
    echo "$(uuidgen)"
  else
    # Fallback strategy: timestamp-processID-random ensures uniqueness
    # Format: scratch-YYYYMMDD-HHMMSS-PID-RANDOM
    echo "scratch-$(date +%Y%m%d-%H%M%S)-$$-$RANDOM"
  fi
}

# Create temp file path
TEMP_DIR="${TMPDIR:-${TMP:-/tmp}}"
FILENAME="$(generate_filename)${EXT}"
TEMP_FILE="${TEMP_DIR}/${FILENAME}"

# Select editor in order of preference:
# 1. User's $EDITOR environment variable (if set)
# 2. vim on macOS (pre-installed on all macOS versions)
# 3. nano on Linux (available on minimal installations)
EDITOR="${EDITOR:-$(platform_command 'vim' 'nano')}"

# Create and open the file
# The editor will create the file if it doesn't exist
print_color blue "Opening scratchpad: ${TEMP_FILE}"
"${EDITOR}" "${TEMP_FILE}"

# Check if file has content
if [[ -f "${TEMP_FILE}" ]] && [[ -s "${TEMP_FILE}" ]]; then
  print_color green "Scratchpad saved at: ${TEMP_FILE}"
else
  print_color yellow "Scratchpad was empty or not saved"
fi