#!/usr/bin/env bash
# Universal code formatter - Works on macOS and Linux

set -euo pipefail

# Color output
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly RED='\033[0;31m'
readonly NC='\033[0m'

info() { echo -e "${GREEN}[INFO]${NC} $1"; }
warning() { echo -e "${YELLOW}[WARN]${NC} $1"; }
error() { echo -e "${RED}[ERROR]${NC} $1"; }

# Track if any formatter was found
FORMATTER_FOUND=false

# Python formatting
if command -v ruff >/dev/null 2>&1; then
    info "Formatting Python files with ruff..."
    ruff format .
    FORMATTER_FOUND=true
elif command -v black >/dev/null 2>&1; then
    info "Formatting Python files with black..."
    black .
    FORMATTER_FOUND=true
fi

# JavaScript/TypeScript formatting
if command -v prettier >/dev/null 2>&1; then
    info "Formatting JS/TS files with prettier..."
    prettier --write "**/*.{js,jsx,ts,tsx,json,css,scss,md}" 2>/dev/null || true
    FORMATTER_FOUND=true
fi

# Go formatting
if command -v gofmt >/dev/null 2>&1; then
    info "Formatting Go files..."
    find . -name "*.go" -type f -exec gofmt -w {} \;
    FORMATTER_FOUND=true
fi

# Rust formatting
if command -v rustfmt >/dev/null 2>&1; then
    info "Formatting Rust files..."
    find . -name "*.rs" -type f -exec rustfmt {} \;
    FORMATTER_FOUND=true
fi

# Shell script formatting
if command -v shfmt >/dev/null 2>&1; then
    info "Formatting shell scripts..."
    shfmt -w .
    FORMATTER_FOUND=true
fi

# Lua formatting
if command -v stylua >/dev/null 2>&1; then
    info "Formatting Lua files..."
    stylua .
    FORMATTER_FOUND=true
fi

if [[ "$FORMATTER_FOUND" == "false" ]]; then
    warning "No formatters found. Install formatters with:"
    echo "  Python: pip install ruff"
    echo "  JS/TS: npm install -g prettier"
    echo "  Go: Already included with Go"
    echo "  Rust: rustup component add rustfmt"
    echo "  Shell: go install mvdan.cc/sh/v3/cmd/shfmt@latest"
    echo "  Lua: cargo install stylua"
else
    info "Formatting complete!"
fi