# ═══════════════════════════════════════════════════════════════════════════════
# 🚀 TMUX CONFIGURATION - Production-Ready Setup
# ═══════════════════════════════════════════════════════════════════════════════
# Optimized for performance, productivity, and seamless workflow integration
# Compatible with Alacritty, Neovim, and modern terminal features
# ═══════════════════════════════════════════════════════════════════════════════

# ─────────────────────────────────────────────────────────────────────────────
# 🎯 CORE CONFIGURATION
# ─────────────────────────────────────────────────────────────────────────────

# Custom prefix key (C-a) - more ergonomic than default C-b
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Enable mouse support for modern workflow
set -g mouse on

# Start indexing from 1 (more intuitive)
set -g base-index 1
setw -g pane-base-index 1

# Automatically renumber windows when one is deleted
set -g renumber-windows on

# ─────────────────────────────────────────────────────────────────────────────
# 🔌 PLUGIN ECOSYSTEM
# ─────────────────────────────────────────────────────────────────────────────

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'

# ─────────────────────────────────────────────────────────────────────────────
# 🖥️  TERMINAL & DISPLAY OPTIMIZATION
# ─────────────────────────────────────────────────────────────────────────────

# Modern terminal support with full color range
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",*256col*:RGB"
set -ag terminal-overrides ",alacritty:RGB"
set -ag terminal-overrides ",xterm-kitty:RGB"

# Enable focus events for Neovim
set -g focus-events on

# ─────────────────────────────────────────────────────────────────────────────
# ⚡ PERFORMANCE OPTIMIZATIONS
# ─────────────────────────────────────────────────────────────────────────────

# Faster status bar updates (balanced for performance)
set -g status-interval 2

# Remove delay when switching between modes in Vim
set -sg escape-time 0

# Longer display time for messages
set -g display-time 2000

# Massive history for development work
set -g history-limit 100000

# Aggressive resize for modern workflows
setw -g aggressive-resize on

# ─────────────────────────────────────────────────────────────────────────────
# 📋 COPY MODE - Vim-Style Selection (macOS Optimized)
# ─────────────────────────────────────────────────────────────────────────────

set -g mode-keys vi

# Enhanced copy mode bindings
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi C-v send -X rectangle-toggle
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'pbcopy'
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'pbcopy'
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel 'pbcopy'

# Quick copy mode access
bind [ copy-mode
bind ] paste-buffer

# ─────────────────────────────────────────────────────────────────────────────
# 🎨 WINDOW & SESSION MANAGEMENT
# ─────────────────────────────────────────────────────────────────────────────

# Automatically set window titles based on current command
set-window-option -g automatic-rename on
set-option -g set-titles on
set-option -g set-titles-string '#S:#I:#W - #{pane_current_command}'

# Modern status bar positioning
set -g status-position top

# ─────────────────────────────────────────────────────────────────────────────
# 🔕 NOTIFICATION SETTINGS
# ─────────────────────────────────────────────────────────────────────────────

# Minimal notification system
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity on
set -g bell-action none

# Activity monitoring with subtle indicators
setw -g monitor-activity on
set -g activity-action other

# ─────────────────────────────────────────────────────────────────────────────
# ⌨️  KEYBINDINGS - Vim-Inspired Workflow
# ─────────────────────────────────────────────────────────────────────────────

# ┌─ PANE MANAGEMENT ─┐

# Intuitive pane splitting (maintains current directory)
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}"  # Alternative horizontal split
bind _ split-window -v -c "#{pane_current_path}"   # Alternative vertical split

# Vim-style pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Smart pane switching with awareness of Vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

# Pane resizing with repeatable keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Fine-grained resizing
bind -r C-h resize-pane -L 1
bind -r C-j resize-pane -D 1
bind -r C-k resize-pane -U 1
bind -r C-l resize-pane -R 1

# ┌─ WINDOW MANAGEMENT ─┐

# Quick window creation
bind c new-window -c "#{pane_current_path}"

# Window navigation
bind -r C-p previous-window
bind -r C-n next-window
bind Tab last-window

# Window swapping
bind -r "<" swap-window -d -t -1
bind -r ">" swap-window -d -t +1

# ┌─ SESSION MANAGEMENT ─┐

# Quick session switching
bind S choose-session
bind s new-session

# ┌─ UTILITY BINDINGS ─┐

# Reload configuration with feedback
bind r source-file ~/.tmux.conf \; display-message "🚀 Config reloaded!"

# Clear screen and history
bind C-k send-keys -R \; clear-history

# Toggle synchronize panes
bind y setw synchronize-panes

# Maximize/restore pane
bind m resize-pane -Z

# Kill pane without confirmation
bind x kill-pane

# Kill window without confirmation
bind X kill-window

# ────────────────────────────────────────────────────────────────────────────────
# 🎨 PLUGIN CONFIGURATIONS
# ────────────────────────────────────────────────────────────────────────────────

# tmux-resurrect: Save and restore tmux sessions
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-save-shell-history 'on'

# tmux-continuum: Automatic session save/restore
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'alacritty'

# tmux-yank: Enhanced copy functionality
set -g @yank_selection_mouse 'clipboard'
set -g @yank_action 'copy-pipe-no-clear'

# ────────────────────────────────────────────────────────────────────────────────
# 🎭 STATUS BAR CONFIGURATION
# ────────────────────────────────────────────────────────────────────────────────

# Status bar customization (before theme loading)
set -g status-justify left
set -g status-left-length 100
set -g status-right-length 100

# Window status format
setw -g window-status-current-format ' #I:#W#F '
setw -g window-status-format ' #I:#W#F '

# ────────────────────────────────────────────────────────────────────────────────
# 🌈 THEME INTEGRATION
# ────────────────────────────────────────────────────────────────────────────────

# Load dynamic theme configuration
if-shell "test -f ~/.config/tmux/theme.conf" "source-file ~/.config/tmux/theme.conf"

# ────────────────────────────────────────────────────────────────────────────────
# 🚀 PERFORMANCE TWEAKS
# ────────────────────────────────────────────────────────────────────────────────

# Optimize for modern terminals
set -g set-clipboard on
set -g allow-passthrough on

# Better scrolling performance
bind -T copy-mode-vi WheelUpPane select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane select-pane \; send-keys -X -N 2 scroll-down

# ────────────────────────────────────────────────────────────────────────────────
# 🔧 DEVELOPMENT WORKFLOW ENHANCEMENTS
# ────────────────────────────────────────────────────────────────────────────────

# Quick development layouts
bind D new-window -n dev \; \
  split-window -h -p 30 \; \
  select-pane -t 0 \; \
  split-window -v -p 25 \; \
  select-pane -t 1

# Quick monitoring layout
bind M new-window -n monitor \; \
  split-window -h \; \
  split-window -v \; \
  select-pane -t 0 \; \
  split-window -v \; \
  select-pane -t 0

# ────────────────────────────────────────────────────────────────────────────────
# 🎯 FINAL INITIALIZATION
# ────────────────────────────────────────────────────────────────────────────────

# Initialize tmux plugin manager (keep this line at the very bottom)
run -b '~/.tmux/plugins/tpm/tpm'
