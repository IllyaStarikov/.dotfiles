# ══════════════════════════════════════════════════════════════════════════════════════════════════════════
# 🖥️  TMUX CONFIGURATION - Modern Terminal Multiplexer Setup
# ══════════════════════════════════════════════════════════════════════════════════════════════════════════
# Production-ready configuration optimized for:
# • Enhanced productivity with vim-like keybindings
# • Smart session management and window navigation  
# • Modern plugin ecosystem with TPM
# • Dynamic theme switching integration
# • Performance optimizations for large outputs
# ══════════════════════════════════════════════════════════════════════════════════════════════════════════

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────
# ⚙️  CORE SETTINGS
# ──────────────────────────────────────────────────────────────────────────────────────────────────────────

# Better prefix key
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Enable mouse
set -g mouse on

# Start windows and panes at 1
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows automatically
set -g renumber-windows on

# Better command delay
set -sg repeat-time 600

# Increase scrollback buffer size
set -g history-limit 50000

# tmux messages display time
set -g display-time 4000

# Refresh status more often
set -g status-interval 5

# Emacs key bindings in tmux command prompt
set -g status-keys emacs

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────
# 🖥️  TERMINAL SUPPORT
# ──────────────────────────────────────────────────────────────────────────────────────────────────────────

# UTF-8 is now default in tmux 2.2+ (removed deprecated options)

# Force UTF-8
set -g default-command "${SHELL}"
set -g default-shell "${SHELL}"

# True color support
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
set -ag terminal-overrides ",alacritty:RGB"
set -as terminal-features ",*:RGB"

# Enable focus events
set -g focus-events on

# Clipboard support
set -g set-clipboard on
set -g allow-passthrough on

# Undercurl support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────
# ⚡ PERFORMANCE OPTIMIZATIONS
# ──────────────────────────────────────────────────────────────────────────────────────────────────────────

# No delay for escape key
set -sg escape-time 0

# Remove duplicate history setting (already set above)

# Remove duplicate status interval (already set above)

# Remove duplicate display time (already set above)

# Aggressive resize
setw -g aggressive-resize on

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────
# 📋 VI MODE AND COPY
# ──────────────────────────────────────────────────────────────────────────────────────────────────────────

# Vi keybindings
setw -g mode-keys vi

# Enter copy mode
bind [ copy-mode
bind ] paste-buffer

# Selection keys
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi C-v send -X rectangle-toggle

# Copy to clipboard with cross-platform support
if-shell "uname | grep -q Darwin" \
    "bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'pbcopy'; \
     bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'pbcopy'; \
     bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel 'pbcopy'" \
    "bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -selection clipboard'; \
     bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'xclip -selection clipboard'; \
     bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel 'xclip -selection clipboard'"

# Smooth scrolling
bind -T copy-mode-vi WheelUpPane select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane select-pane \; send-keys -X -N 2 scroll-down

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────
# 🪟  PANE MANAGEMENT
# ──────────────────────────────────────────────────────────────────────────────────────────────────────────

# Split panes using | and - (and more intuitive v/s)
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

# Navigate panes with hjkl
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Quick pane selection
bind -r C-h select-pane -L
bind -r C-j select-pane -D
bind -r C-k select-pane -U
bind -r C-l select-pane -R

# Smart pane switching with vim awareness
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

# Resize panes (with multiple size options)
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Fine-grained resize
bind -r M-h resize-pane -L 2
bind -r M-j resize-pane -D 2
bind -r M-k resize-pane -U 2
bind -r M-l resize-pane -R 2

# Quick pane balance
bind = select-layout even-horizontal
bind + select-layout even-vertical
bind E select-layout tiled

# Toggle zoom
bind m resize-pane -Z
bind z resize-pane -Z

# Kill pane without confirmation
bind x kill-pane

# Swap panes
bind > swap-pane -D
bind < swap-pane -U

# Break pane into window
bind b break-pane

# Join pane from window
bind-key @ command-prompt -p "join pane from:" "join-pane -s :'%%'"

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────
# 🗂️  WINDOW MANAGEMENT
# ──────────────────────────────────────────────────────────────────────────────────────────────────────────

# New window
bind c new-window -c "#{pane_current_path}"
bind C new-window

# Navigate windows
bind -r C-p previous-window
bind -r C-n next-window
bind Tab last-window
bind Space next-window
bind BSpace previous-window

# Quick window switching with Alt+number
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# Direct window access
bind 1 select-window -t 1
bind 2 select-window -t 2
bind 3 select-window -t 3
bind 4 select-window -t 4
bind 5 select-window -t 5
bind 6 select-window -t 6
bind 7 select-window -t 7
bind 8 select-window -t 8
bind 9 select-window -t 9

# Reorder windows
bind -r S-Left swap-window -d -t -1
bind -r S-Right swap-window -d -t +1

# Kill window
bind X kill-window

# Rename window
bind , command-prompt "rename-window '%%'"

# Window titles
setw -g automatic-rename on
set -g set-titles on
set -g set-titles-string '󰊠 #S  #W'

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────
# 🎯 SESSION MANAGEMENT
# ──────────────────────────────────────────────────────────────────────────────────────────────────────────

# Session navigation
bind S choose-tree -Zs
bind s new-session
bind $ command-prompt "rename-session '%%'"
bind ( switch-client -p
bind ) switch-client -n
bind L switch-client -l

# Kill session
bind X confirm-before -p "kill-session #S? (y/n)" kill-session

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────
# 📊 STATUS BAR
# ──────────────────────────────────────────────────────────────────────────────────────────────────────────

# Position
set -g status-position top

# Style
set -g status-justify left
set -g status-left-length 100
set -g status-right-length 100

# Format
setw -g window-status-current-format ' #I:#W#F '
setw -g window-status-format ' #I:#W#F '

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────
# 🎨 PANE BORDERS
# ──────────────────────────────────────────────────────────────────────────────────────────────────────────

set -g pane-border-status off
set -g pane-border-lines heavy
set -g pane-border-indicators both

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────
# 🔔 NOTIFICATIONS
# ──────────────────────────────────────────────────────────────────────────────────────────────────────────

# Activity
setw -g monitor-activity on
set -g activity-action other

# Disable bells
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g bell-action none

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────
# ⚡ QUICK KEYS & PRODUCTIVITY
# ──────────────────────────────────────────────────────────────────────────────────────────────────────────

# Reload config
bind r source-file ~/.tmux.conf \; display-message "󰑓 Config reloaded"
bind R source-file ~/.tmux.conf

# Clear screen and history
bind C-k send-keys -R \; clear-history \; display-message "󰃢 History cleared"

# Synchronize panes
bind y setw synchronize-panes \; display-message "󰓦 Sync: #{?synchronize-panes,ON,OFF}"

# Quick layouts
bind D new-window -n " Dev" \; split-window -h -p 30 \; select-pane -t 0
bind M new-window -n "󰍹 Monitor" \; split-window -h \; split-window -v
bind T new-window -n " Test" \; split-window -h -p 40 \; split-window -v
bind G new-window -n "󰊢 Git" \; send-keys "lazygit" Enter

# Toggle mouse
bind m set -g mouse \; display-message "Mouse: #{?mouse,ON,OFF}"

# List all key bindings
bind ? list-keys

# Enter command mode
bind : command-prompt

# Show tmux clipboard
bind P list-buffers

# Choose buffer to paste
bind p choose-buffer

# Quick notes in a popup
bind N display-popup -E -w 80% -h 80% "nvim +startinsert ~/notes.md"

# Quick calculator in a popup
bind C display-popup -E -w 50% -h 50% "bc -l"

# Quick htop in a popup
bind H display-popup -E -w 90% -h 90% "htop"

# Quick git status in a popup
bind g display-popup -E -w 80% -h 80% "git status && read -p 'Press enter to close'"

# Send pane to new window
bind ! break-pane -d

# Move pane to current window
bind @ join-pane -h -s !

# Toggle status bar
bind-key b set-option status

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────
# 🔌 PLUGINS (TPM)
# ──────────────────────────────────────────────────────────────────────────────────────────────────────────

# TPM plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'tmux-plugins/tmux-fpp'
set -g @plugin 'christoomey/vim-tmux-navigator'  # Better vim integration

# Only load Tokyo Night plugin if no custom theme is set
if-shell "[ ! -f ~/.config/tmux/theme.conf ]" "set -g @plugin 'janoamaral/tokyo-night-tmux'"

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────
# ⚙️  PLUGIN SETTINGS
# ──────────────────────────────────────────────────────────────────────────────────────────────────────────

# Resurrect
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-save-shell-history 'on'
set -g @resurrect-processes 'ssh mosh psql mysql sqlite3 "~lazygit" "~htop" "~btop"'

# Continuum
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'alacritty'

# Yank
set -g @yank_selection_mouse 'clipboard'
set -g @yank_action 'copy-pipe-no-clear'

# Prefix highlight
set -g @prefix_highlight_fg 'black'
set -g @prefix_highlight_bg 'yellow'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=cyan'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_sync_mode_attr 'fg=black,bg=magenta'
set -g @prefix_highlight_prefix_prompt 'PREFIX'
set -g @prefix_highlight_copy_prompt 'COPY'
set -g @prefix_highlight_sync_prompt 'SYNC'

# Copycat
set -g @copycat_search_C-d '^[[:digit:]]+$'
set -g @copycat_search_C-f '(^|^\.|[[:space:]]|[[:space:]]\.|[[:space:]]\.\.|^\.\.)[[:alnum:]~_-]*/[][[:alnum:]_.#$%&+=/@-]*'
set -g @copycat_search_C-u '(https?://|git@|git://|ssh://|ftp://|file:///)[[:alnum:]?=%/_.:,;~@!#$&()*+-]*'

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────
# 🎨 DEFAULT THEME CONFIGURATION (TOKYO NIGHT)
# ──────────────────────────────────────────────────────────────────────────────────────────────────────────
# These settings will be used unless overridden by theme-specific configs

# Only set Tokyo Night defaults if no theme override is active
if-shell "[ ! -f ~/.config/tmux/theme.conf ]" "\
  set -g @tokyo-night-tmux_theme night; \
  set -g @tokyo-night-tmux_window_id_style digital; \
  set -g @tokyo-night-tmux_pane_id_style hsquare; \
  set -g @tokyo-night-tmux_zoom_id_style dsquare; \
  set -g @tokyo-night-tmux_show_datetime 1; \
  set -g @tokyo-night-tmux_date_format DMY; \
  set -g @tokyo-night-tmux_time_format 24H; \
  set -g @tokyo-night-tmux_show_battery_widget 1; \
  set -g @tokyo-night-tmux_battery_name 'BAT'; \
  set -g @tokyo-night-tmux_battery_low_threshold 21; \
  set -g @tokyo-night-tmux_show_netspeed 1; \
  set -g @tokyo-night-tmux_netspeed_iface 'en0'; \
  set -g @tokyo-night-tmux_netspeed_showip 1; \
  set -g @tokyo-night-tmux_netspeed_refresh 1; \
  set -g @tokyo-night-tmux_show_git 1; \
  set -g @tokyo-night-tmux_show_music 1; \
  set -g @tokyo-night-tmux_show_path 1; \
  set -g @tokyo-night-tmux_path_format relative; \
  set -g @tokyo-night-tmux_show_wbg 1; \
  set -g @tokyo-night-tmux_transparent_status_bar 0"

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────
# 🎯 THEME CONFIGURATION
# ──────────────────────────────────────────────────────────────────────────────────────────────────────────

# Load theme-specific configuration with proper error handling
if-shell "[ -f ~/.config/tmux/theme.conf ]" \
    "source-file ~/.config/tmux/theme.conf" \
    "display-message 'Theme config not found at ~/.config/tmux/theme.conf'"

# ──────────────────────────────────────────────────────────────────────────────────────────────────────────
# 🚀 INITIALIZE TPM
# ──────────────────────────────────────────────────────────────────────────────────────────────────────────

# Initialize TMUX plugin manager with error handling
# IMPORTANT: Keep this line at the very bottom of tmux.conf
if-shell "[ -f ~/.tmux/plugins/tpm/tpm ]" \
    "run -b '~/.tmux/plugins/tpm/tpm'" \
    "display-message 'TPM not found. Install with: git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"